// This file was automatically generated. Do not edit this file!
#ifndef INITIALIZE_PROJECT_HEADER_EXOTICA_OMPL_SOLVER_H_$
#define INITIALIZE_PROJECT_HEADER_EXOTICA_OMPL_SOLVER_H_$

#include <exotica_core/property.h>
#include <exotica_ompl_solver/ompl_solver_initializer.h>
#include <exotica_ompl_solver/rrt_initializer.h>
#include <exotica_ompl_solver/rrt_connect_initializer.h>
#include <exotica_ompl_solver/prm_initializer.h>
#include <exotica_ompl_solver/lazy_prm_initializer.h>
#include <exotica_ompl_solver/est_initializer.h>
#include <exotica_ompl_solver/kpiece_initializer.h>
#include <exotica_ompl_solver/bkpiece_initializer.h>
#include <exotica_ompl_solver/rrt_star_initializer.h>
#include <exotica_ompl_solver/lbt_rrt_initializer.h>


namespace exotica
{

inline std::vector<Initializer> GetExoticaOmplSolverInitializers()
{
    std::vector<Initializer> ret;
    ret.push_back(OMPLSolverInitializer().GetTemplate());
    ret.push_back(RRTSolverInitializer().GetTemplate());
    ret.push_back(RRTConnectSolverInitializer().GetTemplate());
    ret.push_back(PRMSolverInitializer().GetTemplate());
    ret.push_back(LazyPRMSolverInitializer().GetTemplate());
    ret.push_back(ESTSolverInitializer().GetTemplate());
    ret.push_back(KPIECESolverInitializer().GetTemplate());
    ret.push_back(BKPIECESolverInitializer().GetTemplate());
    ret.push_back(RRTStarSolverInitializer().GetTemplate());
    ret.push_back(LBTRRTSolverInitializer().GetTemplate());
   return ret;
}

}

#endif
